# =============================================================================
# OPTIMIZED REQUIREMENTS.TXT FOR QDRANT VECTOR SEARCH SERVICE
# Dense + BM25 (Qdrant Native) Configuration - All dependencies with version constraints
# =============================================================================

# =============================================================================
# CORE WEB FRAMEWORK & API
# =============================================================================
fastapi>=0.115.0,<0.116.0                    # Modern, fast web framework for APIs
uvicorn[standard]>=0.34.0,<0.35.0            # ASGI server with standard extras
pydantic>=2.11.0,<3.0.0                      # Data validation and settings management
pydantic-settings>=2.9.0,<3.0.0              # Settings management for Pydantic

# =============================================================================
# VECTOR DATABASE & EMBEDDINGS (Dense + BM25 Qdrant Native)
# =============================================================================
qdrant-client==1.15.1                         # Qdrant vector database client (v1.15.1 with BM25 native support)
fastembed>=0.7.1,<1.0.0                      # Fast embedding generation (Dense: BAAI/bge-small-en-v1.5, BM25: Qdrant/bm25)
grpcio>=1.60.0,<2.0.0                        # gRPC runtime for optimal Qdrant performance
grpcio-status>=1.60.0,<2.0.0                 # gRPC status codes
# openai>=1.0.0                              # OpenAI embeddings (uncomment if needed)

# =============================================================================
# DATA PROCESSING & INDEXING
# =============================================================================
datasets>=2.14.5,<3.0.0                      # HuggingFace datasets for data processing
numpy>=1.21.0,<2.0.0                         # Numerical computing
tqdm>=4.64.0,<5.0.0                          # Progress bars for indexing
psutil>=6.0.0,<7.0.0                         # System monitoring and process utilities

# =============================================================================
# UTILITIES & HELPERS
# =============================================================================
python-dotenv>=1.1.0,<2.0.0                  # Environment variable management
python-multipart>=0.0.5,<1.0.0               # File upload handling for FastAPI
symspellpy>=6.7.0,<7.0.0                     # Spell correction
aiohttp>=3.8.5,<4.0.0                        # Async HTTP client for indexing
requests>=2.31.0,<3.0.0                      # HTTP library for API calls

# =============================================================================
# LOGGING & MONITORING
# =============================================================================
loguru>=0.5.3,<1.0.0                         # Advanced logging with rotation

# =============================================================================
# UI & INTERFACE (Optional - for search_ui)
# =============================================================================
# streamlit>=1.28.0,<2.0.0  
streamlit==1.32.2                   # Web interface for search UI (optional)

# =============================================================================
# SEARCH OPTIMIZATION (Not needed for Dense + BM25 configuration)
# =============================================================================
# cross-encoder>=0.0.1                       # Cross-encoder for reranking (removed - using RRF fusion)
# transformers>=4.30.0,<5.0.0                # HuggingFace transformers (not needed - fastembed handles all models)

# =============================================================================
# DEVELOPMENT & TESTING (Optional - for development)
# =============================================================================
# pytest>=7.4.0,<8.0.0                      # Testing framework (uncomment for dev)
# pytest-asyncio>=0.21.0,<1.0.0              # Async testing support (uncomment for dev)
# black>=23.0.0,<24.0.0                      # Code formatting (uncomment for dev)
# flake8>=6.0.0,<7.0.0                       # Linting (uncomment for dev)

# =============================================================================
# DEPLOYMENT & CONTAINERIZATION
# =============================================================================
# docker>=6.0.0,<7.0.0                       # Docker SDK (uncomment if needed)
# kubernetes>=28.0.0,<29.0.0                 # Kubernetes client (uncomment if needed)

# =============================================================================
# SECURITY & AUTHENTICATION (Optional)
# =============================================================================
# python-jose[cryptography]>=3.3.0,<4.0.0    # JWT handling (uncomment if needed)
# passlib[bcrypt]>=1.7.4,<2.0.0              # Password hashing (uncomment if needed)

# =============================================================================
# MONITORING & METRICS (Optional)
# =============================================================================
# prometheus-client>=0.17.0,<1.0.0            # Prometheus metrics (uncomment if needed)
# structlog>=23.0.0,<24.0.0                  # Structured logging (uncomment if needed)

# =============================================================================
# PERFORMANCE OPTIMIZATION (Optional)
# =============================================================================
# orjson>=3.9.0,<4.0.0                       # Fast JSON serialization (uncomment if needed)
# ujson>=5.8.0,<6.0.0                        # Fast JSON parsing (uncomment if needed)

# =============================================================================
# INSTALLATION NOTES
# =============================================================================
# 
# CORE INSTALLATION (Production):
# pip install -r requirements-optimal.txt
#
# DEVELOPMENT INSTALLATION (with testing):
# pip install -r requirements-optimal.txt
# pip install pytest pytest-asyncio black flake8
#
# MINIMAL INSTALLATION (Core only - Dense + BM25):
# pip install fastapi uvicorn pydantic pydantic-settings qdrant-client fastembed grpcio grpcio-status python-dotenv
#
# PERFORMANCE OPTIMIZATION:
# - Use orjson for faster JSON serialization
# - Use ujson for faster JSON parsing
# - Dense + BM25 + RRF fusion provides optimal search results without cross-encoders
#
# DEPLOYMENT CONSIDERATIONS:
# - All dependencies are pinned to specific version ranges
# - Core dependencies are production-ready
# - Optional dependencies are clearly marked
# - Performance optimizations are available as optional extras
#
# ============================================================================= 